/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package classeditor;

import classeditor.Character.Father;
import classeditor.Character.Sex;
import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;

/**
 *
 * @author Garttox
 */
public class LoadCharacters extends javax.swing.JFrame {
    DefaultListModel model = new DefaultListModel();
    /**
     * Creates new form LoadCharacters
     */
    
    private String exitButton="load";
    private MainMenu mainMenu;
    private Mage activeCharMage;
    private Warrior activeCharWarrior;
    private Rogue activeCharRogue;
    
    public LoadCharacters(MainMenu frame) {
        initComponents();
        mainMenu = frame;
        this.setVisible(true);
        charactersList.setModel(model);
        loadCharactersSaves();
    }
    
    public LoadCharacters() {
        initComponents();
        this.setVisible(true);
    }
    
    
    
    
    public String showDialog() {
        this.setVisible(true);
        return exitButton;
    }
    
    private void loadCharactersSaves() {
        int i = 0;
        try (BufferedReader br = new BufferedReader(new FileReader("save.csv"))) {
            String s;
            model.clear();
            while ((s = br.readLine()) != null) {
                if(i>0){    
                    System.out.println(s);
                    String[] attr=s.split(";");
                    Character character=new Character();
                    switch (attr[1]) {
                        case "Mage":
                            character = new Mage();
                            break;
                        case "Warrior":
                            character = new Warrior();
                            break;
                        case "Rogue":
                            character = new Rogue();
                            break;
                    }
                    character.setFirstname(attr[2]);
                    character.setSurname(attr[3]);
                    switch(attr[4]){
                        case "MERCHANT":
                            character.setFather(Father.MERCHANT);
                            break;
                        case "KNIGHT":
                            character.setFather(Father.KNIGHT);
                            break;
                        case "MERCENARY":
                            character.setFather(Father.MERCENARY);
                            break;
                        case "BLACKSMITH":
                            character.setFather(Father.BLACKSMITH);
                            break;
                    }
                    switch (attr[5]) {
                        case "MAN":
                            character.setSex(Sex.MAN);
                            break;
                        case "WOMAN":
                            character.setSex(Sex.WOMAN);
                            break;
                        case "NON_BINARY":
                            character.setSex(Sex.NON_BINARY);
                            break;
                    }
                    model.addElement(character);
                }
                i++;
            }
        } catch (Exception e) {
            System.err.println("Chyba při čtení ze souboru.");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        charactersList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        charactersTextArea = new javax.swing.JTextArea();
        backButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Saves");

        charactersList.setToolTipText("");
        charactersList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                charactersListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(charactersList);

        charactersTextArea.setColumns(18);
        charactersTextArea.setRows(8);
        charactersTextArea.setTabSize(5);
        charactersTextArea.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        charactersTextArea.setEnabled(false);
        jScrollPane2.setViewportView(charactersTextArea);

        backButton.setText("back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Remove");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backButton)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(backButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        exitButton = "back";
        mainMenu.back(this);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void charactersListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_charactersListValueChanged
        if(charactersList.getSelectedIndex() != -1){    
            String output;
            switch(model.get(charactersList.getSelectedIndex()).getClass().getSimpleName()){
                case "Warrior":
                    activeCharWarrior=(Warrior)model.getElementAt(charactersList.getSelectedIndex());
                    output="Name: "+activeCharWarrior.getFirstname()+" "+activeCharWarrior.getSurname()+"\nSex: "+activeCharWarrior.getSex()+"\nFather was "+activeCharWarrior.getFather()+"\nClass: "+activeCharWarrior.getClass().getSimpleName()+"\n\n"+activeCharWarrior.getStats();
                    break;
                case "Mage":
                    activeCharMage=(Mage)model.getElementAt(charactersList.getSelectedIndex());
                    output="Name: "+activeCharMage.getFirstname()+" "+activeCharMage.getSurname()+"\nSex: "+activeCharMage.getSex()+"\nFather was "+activeCharMage.getFather()+"\nClass: "+activeCharMage.getClass().getSimpleName()+"\n\n"+activeCharMage.getStats();
                    break;
                case "Rogue":
                    activeCharRogue=(Rogue)model.getElementAt(charactersList.getSelectedIndex());
                    output="Name: "+activeCharRogue.getFirstname()+" "+activeCharRogue.getSurname()+"\nSex: "+activeCharRogue.getSex()+"\nFather was "+activeCharRogue.getFather()+"\nClass: "+activeCharRogue.getClass().getSimpleName()+"\n\n"+activeCharRogue.getStats();
                    break;
                default:
                    output="";
                    break;
            }
            charactersTextArea.setText(output);
        }
    }//GEN-LAST:event_charactersListValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int selectedIndex = charactersList.getSelectedIndex();
        if(selectedIndex != -1){
            model.remove(selectedIndex);
            mainMenu.deleteSaveFile();
            charactersTextArea.setText("");
            for(int i=0;i<model.getSize();i++)
                mainMenu.saveCharacter((Character)model.get(i));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoadCharacters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoadCharacters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoadCharacters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoadCharacters.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoadCharacters().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JList<String> charactersList;
    private javax.swing.JTextArea charactersTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
